server:
  port: 8087

spring:
  application:
    name: metrics-collector
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  config:
    import: "configserver:"
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  cloud:
    config:
      uri: http://localhost:8888
      username: configuser
      password: configpass
      fail-fast: false
      retry:
        initial-interval: 1000
        max-attempts: 6
        max-interval: 2000
        multiplier: 1.1
  data:
    redis:
      host: js2.blockelite.cn
      port: 10659
      timeout: 2000ms
      database: 0
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: localhost
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

management:
  server:
    port: 9087
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      slo:
        http.server.requests: 50ms,100ms,200ms,300ms,500ms,1s
  tracing:
    sampling:
      probability: 1.0
    zipkin:
      endpoint: http://localhost:9411/api/v2/spans

logging:
  level:
    com.shophub.metrics: INFO
    org.springframework.cloud: DEBUG
    io.micrometer: DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

# Week 7: 分布式追踪和可观测性配置
observability:
  collection:
    enabled: true
    interval: 30s
    services:
      - user-service
      - product-service
      - order-service
      - payment-service
      - api-gateway
  tracing:
    enabled: true
    sample-rate: 1.0
    export-timeout: 30s
  metrics:
    custom:
      enabled: true
      business-metrics: true
      performance-metrics: true

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
    import: "configserver:"
  cloud:
    config:
      uri: http://config-server:8888
  data:
    redis:
      host: redis
      port: 6379
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    hostname: metrics-collector

management:
  tracing:
    zipkin:
      endpoint: http://zipkin:9411/api/v2/spans