server:
  port: ${PORT:8082}

spring:
  application:
    name: product-service
  
  # 数据库配置 (H2内存数据库)
  datasource:
    url: jdbc:h2:mem:productdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  # JPA配置
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  # H2控制台配置 (开发环境)
  h2:
    console:
      enabled: true
      path: /h2-console

# Eureka Client 配置
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    # 更频繁地从注册中心获取服务列表
    registry-fetch-interval-seconds: 5
    # 初始实例信息复制延迟时间
    initial-instance-info-replication-interval-seconds: 5
    # 实例信息复制间隔时间
    instance-info-replication-interval-seconds: 5
  instance:
    prefer-ip-address: true
    # 更频繁的心跳，更快检测到服务状态变化
    lease-renewal-interval-in-seconds: 5
    # 更短的过期时间，更快清理失效实例
    lease-expiration-duration-in-seconds: 15
    # 元数据，标识服务版本
    metadata-map:
      version: "1.0.0"
      startup: ${random.long}
      instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
      port: ${server.port}

# 健康检查配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,refresh,env,circuitbreakers,circuitbreakerevents
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

# Resilience4j配置
resilience4j:
  # 熔断器配置
  circuitbreaker:
    instances:
      recommendation-service:
        register-health-indicator: true
        sliding-window-type: count_based
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15s
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - java.lang.RuntimeException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
      
      popular-products:
        register-health-indicator: true
        sliding-window-type: count_based
        sliding-window-size: 8
        minimum-number-of-calls: 3
        failure-rate-threshold: 40
        wait-duration-in-open-state: 10s
        automatic-transition-from-open-to-half-open-enabled: true
      
      similar-products:
        register-health-indicator: true
        sliding-window-type: time_based
        sliding-window-size: 60
        minimum-number-of-calls: 4
        failure-rate-threshold: 30
        wait-duration-in-open-state: 20s
  
  # 重试配置
  retry:
    instances:
      recommendation-service:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.lang.RuntimeException
          - java.util.concurrent.TimeoutException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
      
      similar-products:
        max-attempts: 2
        wait-duration: 500ms
        exponential-backoff-multiplier: 1.5
  
  # 超时控制配置
  timelimiter:
    instances:
      recommendation-service:
        timeout-duration: 4s
        cancel-running-future: true
  
  # 舱壁模式配置
  bulkhead:
    instances:
      recommendation-service:
        max-concurrent-calls: 3
        max-wait-duration: 2s

# 日志配置
logging:
  level:
    com.shophub.product: INFO
    org.springframework.cloud: DEBUG
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    io.github.resilience4j: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n" 