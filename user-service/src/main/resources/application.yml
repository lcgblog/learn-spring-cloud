server:
  port: 8081

spring:
  application:
    name: user-service
  config:
    import: "configserver:"
  
  # 数据库配置 (H2内存数据库)
  datasource:
    url: jdbc:h2:mem:userdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  # JPA配置
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  # H2控制台配置 (开发环境)
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # Spring Cloud LoadBalancer 配置
  cloud:
    loadbalancer:
      # 缓存时间，0表示不缓存，实时获取最新服务列表
      cache:
        ttl: 1s
      # 健康检查
      health-check:
        initial-delay: 0s
        interval: 5s

# Eureka Client 配置
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    # 更频繁地从注册中心获取服务列表
    registry-fetch-interval-seconds: 5
    # 初始实例信息复制延迟时间
    initial-instance-info-replication-interval-seconds: 5
    # 实例信息复制间隔时间
    instance-info-replication-interval-seconds: 5
  instance:
    prefer-ip-address: true
    # 更频繁的心跳，更快检测到服务状态变化
    lease-renewal-interval-in-seconds: 5
    # 更短的过期时间，更快清理失效实例
    lease-expiration-duration-in-seconds: 15
    # 元数据，标识服务版本
    metadata-map:
      version: "1.0.0"
      startup: ${random.long}

# Feign 配置
feign:
  # 启用重试
  retryer:
    enabled: true
  # 客户端配置
  client:
    config:
      default:
        # 连接超时时间 (毫秒)
        connect-timeout: 3000
        # 读取超时时间 (毫秒) 
        read-timeout: 5000
        # 日志级别
        logger-level: BASIC
      # 针对product-service的特定配置
      product-service:
        connect-timeout: 2000
        read-timeout: 3000



# 健康检查配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,refresh,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  # Week 7: 分布式追踪配置
  tracing:
    sampling:
      probability: 1.0
    zipkin:
      endpoint: http://localhost:9411/api/v2/spans

# 日志配置
logging:
  level:
    com.shophub.user: INFO
    org.springframework.cloud: DEBUG
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    # Feign 相关日志
    com.shophub.user.feign: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    com.netflix.loadbalancer: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    config:
      uri: http://config-server:8888

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    hostname: user-service

# Week 7: Docker 环境下的分布式追踪配置
management:
  tracing:
    zipkin:
      endpoint: http://zipkin:9411/api/v2/spans 